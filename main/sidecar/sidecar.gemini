# ======================= SIDECAR SQUASHFS LIVE BOOT =======================
if [ -n "${KOPT_alpinelivelabel}" ]; then

	# DEBUG VISIVO IMMEDIATO
	echo ">>> PENGUINS' EGGS SIDECAR ATTIVATO <<<"

	ebegin "Penguins' eggs: setting up SquashFS live environment"

	echo "DEBUG: Eseguo mdev -s e attendo 2 secondi..."
	mdev -s
	sleep 2
	
	echo "--- PAUSA DEBUG 1 ---"
	echo "Ora ispezioneremo /sys/block/ per trovare i dischi."
	echo "Premi INVIO per continuare..."
	read

	ebegin "Manually creating device symlinks"
	mkdir -p /dev/disk/by-label /dev/disk/by-uuid
	
	FOUND_ANYTHING=0
	for D in /sys/block/*; do
		echo "DEBUG: Trovato disco in /sys/block: $(basename $D)"
		
		for P in $D/*; do
			if [ -f "$P/partition" ]; then
				DEVNAME=$(basename $P)
				echo "DEBUG: Trovata partizione $DEVNAME."
				
				if [ -b "/dev/$DEVNAME" ]; then
					echo "DEBUG: /dev/$DEVNAME esiste. Eseguo blkid..."
					eval $(blkid -o export /dev/$DEVNAME)
					
					if [ -n "$LABEL" ]; then
						echo "DEBUG: TROVATO! LABEL=$LABEL per /dev/$DEVNAME"
						ln -s /dev/$DEVNAME /dev/disk/by-label/"$LABEL"
						FOUND_ANYTHING=1
					fi
					unset DEVNAME LABEL UUID
				else
					echo "DEBUG: ERRORE! /dev/$DEVNAME non è stato creato."
				fi
			fi
		done
	done

	echo "--- PAUSA DEBUG 2 ---"
	echo "La creazione dei link è terminata."
	echo "Contenuto di /dev/disk/by-label/:"
	ls /dev/disk/by-label/
	echo "Premi INVIO per continuare..."
	read

	if [ $FOUND_ANYTHING -eq 0 ]; then
		eend 1 "Nessuna partizione con LABEL trovata."
	else
		eend 0
	fi

	# --- INIZIO: Logica di attesa per il dispositivo ---
	WAIT_TIMEOUT=5 
	SECONDS_WAITED=0
	devicelive=""

	while [ -z "$devicelive" ] && [ $SECONDS_WAITED -lt $WAIT_TIMEOUT ]; do
		devicelive=$(findfs "LABEL=${KOPT_alpinelivelabel}")
		if [ -z "$devicelive" ]; then
			sleep 1
			SECONDS_WAITED=$((SECONDS_WAITED + 1))
		fi
	done
	
	# --- FINE: Logica di attesa ---

	if [ -z "$devicelive" ]; then
		eend 1 "Device with LABEL=${KOPT_alpinelivelabel} not found"
	else
		fstype=$(blkid -l -t LABEL="${KOPT_alpinelivelabel}" -o value -s TYPE)

		mkdir /mnt
		mkdir -p /media/root-ro
		mkdir -p /media/root-rw
		mkdir -p /media/root-rw/work
		mkdir -p /media/root-rw/root

		mount -t $fstype ${devicelive} /mnt && \
		mount -t squashfs /mnt${KOPT_alpinelivesquashfs} /media/root-ro && \
		mount -t tmpfs root-tmpfs /media/root-rw && \
		mount -t overlay overlay -o lowerdir=/media/root-ro,upperdir=/media/root-rw/root,workdir=/media/root-rw/work $sysroot
		
		if ! mountpoint -q "$sysroot"; then
			eend 1 "Failed to mount overlayfs to $sysroot"
		else
			eend 0
			[ ! -d "$sysroot/etc" ] && mkdir -p "$sysroot/etc"
			echo 21733847458759515a19bd2466cdd5de > $sysroot/etc/machine-id

			ebegin "Finalizing live environment"
			setup_inittab_console
			! [ -f "$sysroot"/etc/resolv.conf ] && [ -f /etc/resolv.conf ] && \
				cp /etc/resolv.conf "$sysroot"/etc
			eend 0

			cat "$ROOT"/proc/mounts 2>/dev/null | while read DEV DIR TYPE OPTS ; do
				if [ "$DIR" != "/" -a "$DIR" != "$sysroot" -a -d "$DIR" ]; then
					mkdir -p $sysroot/$DIR
					$MOCK mount -o move $DIR $sysroot/$DIR
				fi
			done
			sync
			
			echo "Switching to live root..."
			exec switch_root $switch_root_opts $sysroot "$KOPT_init" $KOPT_init_args

			echo "Failed to switch_root from live environment. Emergency shell launched."
			exec /bin/busybox sh
		fi
	fi
fi
# ===================== FINE SIDECAR SQUASHFS LIVE BOOT =====================