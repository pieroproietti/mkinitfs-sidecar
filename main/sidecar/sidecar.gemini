# ======================= SIDECAR SQUASHFS LIVE BOOT (Versione Elegante) =======================
# Se viene rilevato il nostro parametro per l'avvio live, configuriamo
# il sistema con overlayfs e saltiamo direttamente a switch_root.
if [ -n "${KOPT_alpinelivelabel}" ]; then

	ebegin "Penguins' eggs: Initializing hardware devices"

	# L'ECCELLENTE IDEA DELL'UTENTE: Usiamo lo strumento nativo di Alpine
	# per inizializzare i dispositivi, ma senza fargli cercare repository o apkovl.
	# Questo comando esegue mdev, popola /dev e crea i symlink by-label/by-uuid.
	# Includiamo l'opzione per il ritardo USB per la massima compatibilitÃ .
	$MOCK nlplug-findfs -p /sbin/mdev ${KOPT_usbdelay:+-t $(( $KOPT_usbdelay * 1000 ))}
	eend $? # Controlliamo l'esito. Se fallisce, lancia la recovery shell.

	# --- INIZIO: Logica di attesa per il dispositivo ---
	# Ora che i dispositivi sono stati inizializzati correttamente, cerchiamo la nostra etichetta.
	WAIT_TIMEOUT=10 # Diamo comunque qualche secondo per sicurezza
	SECONDS_WAITED=0
	devicelive=""

	while [ -z "$devicelive" ] && [ $SECONDS_WAITED -lt $WAIT_TIMEOUT ]; do
		devicelive=$(findfs "LABEL=${KOPT_alpinelivelabel}")
		if [ -z "$devicelive" ]; then
			sleep 1
			SECONDS_WAITED=$((SECONDS_WAITED + 1))
		fi
	done
	# --- FINE: Logica di attesa ---

	if [ -z "$devicelive" ]; then
		eend 1 "Device with LABEL=${KOPT_alpinelivelabel} not found after scan"
	else
		# Abbiamo trovato il dispositivo, procediamo come prima.
		eend 0 "Found device ${devicelive}"
		fstype=$(blkid -l -t LABEL="${KOPT_alpinelivelabel}" -o value -s TYPE)

		ebegin "Mounting live filesystem"
		mkdir /mnt
		mkdir -p /media/root-ro
		mkdir -p /media/root-rw
		mkdir -p /media/root-rw/work
		mkdir -p /media/root-rw/root

		mount -t $fstype ${devicelive} /mnt && \
		mount -t squashfs /mnt${KOPT_alpinelivesquashfs} /media/root-ro && \
		mount -t tmpfs root-tmpfs /media/root-rw && \
		mount -t overlay overlay -o lowerdir=/media/root-ro,upperdir=/media/root-rw/root,workdir=/media/root-rw/work $sysroot
		
		if ! mountpoint -q "$sysroot"; then
			eend 1 "Failed to mount overlayfs to $sysroot"
		else
			eend 0
			[ ! -d "$sysroot/etc" ] && mkdir -p "$sysroot/etc"
			echo 21733847458759515a19bd2466cdd5de > $sysroot/etc/machine-id

			ebegin "Finalizing live environment"
			setup_inittab_console
			! [ -f "$sysroot"/etc/resolv.conf ] && [ -f /etc/resolv.conf ] && \
				cp /etc/resolv.conf "$sysroot"/etc
			eend 0

			cat "$ROOT"/proc/mounts 2>/dev/null | while read DEV DIR TYPE OPTS ; do
				if [ "$DIR" != "/" -a "$DIR" != "$sysroot" -a -d "$DIR" ]; then
					mkdir -p $sysroot/$DIR
					$MOCK mount -o move $DIR $sysroot/$DIR
				fi
			done
			sync
			
			echo "Switching to live root..."
			exec switch_root $switch_root_opts $sysroot "$KOPT_init" $KOPT_init_args

			echo "Failed to switch_root from live environment. Emergency shell launched."
			exec /bin/busybox sh
		fi
	fi
fi
# ===================== FINE SIDECAR SQUASHFS LIVE BOOT =====================